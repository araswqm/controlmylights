<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Control My Lights</title>
  <link rel="icon" href="favicon.ico" type="image/x-icon" />
  <style>
    body {
      background-color: #222;
      color: #fff;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      overflow: hidden;
    }

    .switch-container {
      text-align: center;
      position: relative;
      z-index: 2;
    }

    .label {
      font-size: 26px;
      margin-bottom: 30px;
      font-weight: 600;
    }

    .switch {
      position: relative;
      width: 120px;
      height: 60px;
      background: #d1d1d6;
      border-radius: 30px;
      cursor: pointer;
      transition: background 0.4s ease-in-out, box-shadow 0.3s ease;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
      margin: 0 auto;
    }

    .knob {
      position: absolute;
      top: 10px;
      left: 10px;
      width: 40px;
      height: 40px;
      background: white;
      border-radius: 50%;
      transition: transform 0.4s ease-in-out;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      display: flex;
      justify-content: center;
      align-items: center;
      font-weight: bold;
      color: black;
      font-size: 14px;
    }

    .switch.on {
      background: #4cd964;
      box-shadow: 0 4px 12px rgba(0, 204, 102, 0.4);
    }

    .switch.on .knob {
      transform: translateX(60px);
    }

    body.on {
      background-color: #f2f2f7;
      color: #000;
    }

    .label.on {
      color: #000;
    }

    .label.off {
      color: #fff;
    }

    .bulb-wrapper {
      position: absolute;
      top: -300px;
      left: 50%;
      transform: translateX(-50%);
      transition: top 1s ease;
      z-index: 1;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .bulb-wrapper.on {
      top: -100px;
    }

    .cord {
      width: 2px;
      height: 200px;
      background: #444;
      margin-bottom: -10px;
    }

    .bulb {
      width: 60px;
      height: 90px;
      background: #444;
      border-radius: 30px 30px 20px 20px;
      position: relative;
      box-shadow: none;
      transition: background 1s ease, box-shadow 1s ease;
    }

    .bulb.on {
      background: #FFD700;
      box-shadow: 0 0 30px 10px rgba(255, 223, 0, 0.6), 0 0 60px 20px rgba(255, 223, 0, 0.4);
    }

    .bulb::before {
      content: "";
      position: absolute;
      top: -20px;
      left: 50%;
      transform: translateX(-50%);
      width: 10px;
      height: 20px;
      background: #666;
      border-radius: 2px;
    }
  </style>
</head>
<body class="off">
  <div class="bulb-wrapper" id="bulbWrapper">
    <div class="cord"></div>
    <div class="bulb" id="bulb"></div>
  </div>

  <div class="switch-container">
    <div class="label off">Işık Kapalı</div>
    <div class="switch" id="lightSwitch">
      <div class="knob" id="knobText">OFF</div>
    </div>
  </div>

  <script>
    const switchElement = document.getElementById('lightSwitch');
    const knob = document.getElementById('knobText');
    const body = document.body;
    const label = document.querySelector('.label');
    const bulbWrapper = document.getElementById('bulbWrapper');
    const bulb = document.getElementById('bulb');

    const lightControlURL = "https://script.google.com/macros/s/AKfycbxVjeBj6M51no0H0x4ldEG0VDcG-0qAJ4UzYk8DXZBDZtaQvj8J8X4s5ONYYSUoKu_z/exec";

    switchElement.addEventListener('click', () => {
      const isOn = switchElement.classList.toggle('on');
      knob.textContent = isOn ? 'ON' : 'OFF';
      body.className = isOn ? 'on' : 'off';
      label.className = isOn ? 'label on' : 'label off';
      label.textContent = isOn ? 'Işık Açık' : 'Işık Kapalı';

      bulbWrapper.classList.toggle('on', isOn);
      bulb.classList.toggle('on', isOn);

      const requestUrl = `${lightControlURL}?state=${isOn ? 'on' : 'off'}`;
      fetch(requestUrl).catch(error => {});
    });
  </script>
</body>
</html>
